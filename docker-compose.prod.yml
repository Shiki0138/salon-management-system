version: '3.8'

services:
  # Production PostgreSQL with persistent volumes
  postgres:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    environment:
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data

  # Production Redis with optimized settings
  redis:
    command: redis-server --appendonly yes --appendfsync everysec --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - /var/lib/redis/data:/data

  # Production Backend with security enhancements
  backend:
    environment:
      NODE_ENV: production
      LOG_LEVEL: info
      ENABLE_CORS: 'true'
      TRUST_PROXY: 'true'
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - /var/log/salon/backend:/app/logs
      - /var/uploads/salon:/app/uploads

  # Production Frontend with SSL
  frontend:
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro

  # Load balancer for production
  nginx-lb:
    image: nginx:alpine
    container_name: salon_nginx_lb
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    networks:
      - salon_network
    depends_on:
      - frontend
      - backend

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: salon_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - salon_network
    profiles:
      - monitoring

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: salon_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - salon_network
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data: